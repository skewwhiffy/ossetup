#!/bin/sh
### BEGIN INIT INFO
# Provides:          onedrive
# Required-Start:    $syslog $remote_fs
# Required-Stop:     $syslog $remote_fs
# Should-Start:      cgroupfs-mount cgroup-lite
# Should-Stop:       cgroupfs-mount cgroup-lite
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Onedrive daemon
# Description:
#  Onedrive is a Microsoft-provided cloud-based storage service.
### END INIT INFO

NAME=$(basename $(readlink -f "$0"))
DAEMON="/usr/local/bin/onedrive --monitor"
# This is the pid file managed by docker itself
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log
DESC="Onedrive"

# Exit if executable is not installed
[ -x "/usr/local/bin/onedrive" ] || exit 0

# Define LSB log_* functions.
. /lib/lsb/init-functions || exit 1

fail_unless_root() {
	if [ "$(id -u)" != '0' ]; then
		log_failure_msg "$DESC must be run as root"
		exit 1
	fi
}

case "$1" in
	start)
		fail_unless_root
    touch "$LOGFILE"
    mkdir -p `dirname "$PIDFILE"`
    echo dirname: $(dirname "$PIDFILE")
    echo $(which start-stop-daemon)
    echo $0
    log_begin_msg "Starting $DESC: $NAME"
		$0 status >>/dev/null \
		|| start-stop-daemon --start --background
			--no-close \
			--exec "/sbin/runuser kenny -s /bin/bash -c \"/usr/local/bin/onedrive --monitor\"" \
			--pidfile "$PIDFILE" \
			--make-pidfile
    log_end_msg $?
	;;

	stop)
		fail_unless_root
		if [ -f "$PIDFILE" ]; then
			log_begin_msg "Stopping $DESC: $NAME"
			start-stop-daemon --stop --pidfile "$PIDFILE" --remove-pidfile --retry 10
			log_end_msg $?
		else
			log_warning_msg "Onedrive already stopped - file $PIDFILE not found."
		fi
	;;

	restart)
		fail_unless_root
		pid=`cat "$PIDFILE" 2>/dev/null`
		[ -n "$pid" ] \
			&& ps -p $pid > /dev/null 2>&1 \
			&& $0 stop
		$0 start
	;;

	force-reload)
		fail_unless_root
		$0 restart
	;;

	status)
		status_of_proc -p "$PIDFILE" "$DAEMON" "$DESC"
	;;

	*)
		echo "Usage: service onedrive {start|stop|restart|status}"
		exit 1
	;;
esac
